# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  #push:
  #  branches: [ "master" ]
  pull_request:
  label: 
  issues: 
  issue_comment: 
  #  branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CONFIG_DEPLOY: 'Release'
  NAMESPACE: 'common'
  API_NAME: 'eventflowwebapi'
  DOCKER_REGISTRY: 'acrapplications.azurecr.io'
  PATH_DOCKERFILE: 'Eventflow.WebApi/Dockerfile'
  ARGOCD_REPOSITORY: 'abpedroni/test-gh-get-events-app-argocd'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo "event_action, ${{ github.event.action }}"
          echo "event_name, ${{ github.event_name }}"
          echo "event_path, ${{ github.event_path }}"

      - name: Declare variables
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=branch::${GITHUB_REF_NAME//\//\-}"

      - name: Other variables
        id: other-vars
        run: |
          echo "docker-image=$(echo '${{ env.DOCKER_REGISTRY }}/${{ env.NAMESPACE }}/${{ env.API_NAME }}:${{ steps.vars.outputs.sha_short }}.${{ github.run_id }}')" >> $GITHUB_ENV

      - name: 1Make Request
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://eny2iuvwt5o9.x.pipedream.net/api/github/events'
          method: 'POST'
          customHeaders: |-
            {
              "Content-Type": "application/json", 
              "x-github-hook-installation-target-type": "integration"
            }
          data: |-
            {
              "action": "created_github_action",
              "docker_image": "${{ env.docker-image }}"
            }

      - name: Call url pipedream
        run: |
          curl --location 'https://eny2iuvwt5o9.x.pipedream.net/api/github/events' \
          --header 'x-github-hook-installation-target-type: integration' \
          --header 'x-github-delivery: dbcbfe90-ac04-11ee-9c37-3147876ca357' \
          --header 'x-github-event: issues_from_github_action' \
          --header 'x-github-hook-id: 397864025' \
          --header 'x-github-hook-installation-target-id: 284471' \
          --header 'Content-Type: application/json' \
          --data '{
              "action": "created",
              "issue": {
                  "url": "https://api.github.com/repos/abpedroni/test-gh-get-events-app-argocd/issues/38",
                  "repository_url": "https://api.github.com/repos/abpedroni/test-gh-get-events-app-argocd",
                  "labels_url": "https://api.github.com/repos/abpedroni/test-gh-get-events-app-argocd/issues/38/labels{/name}",
                  "comments_url": "https://api.github.com/repos/abpedroni/test-gh-get-events-app-argocd/issues/38/comments",
                  "events_url": "https://api.github.com/repos/abpedroni/test-gh-get-events-app-argocd/issues/38/events",
                  "html_url": "https://github.com/abpedroni/test-gh-get-events-app-argocd/pull/38",
                  "id": 2064437579,
                  "node_id": "PR_kwDOK-RUxM5jKPxx",
                  "number": 38,
                  "title": "chore(deps): dev/bump eventflowwebapi to master.4f199a0.7293914525.",
                  "state": "closed",
                  "locked": false,
                  "assignee": null,
                  "assignees": [],
                  "milestone": null,
                  "comments": 1,
                  "created_at": "2024-01-03T17:59:59Z",
                  "updated_at": "2024-01-03T18:01:08Z",
                  "closed_at": "2024-01-03T18:00:30Z",
                  "author_association": "OWNER",
                  "active_lock_reason": null,
                  "draft": false,
                  "pull_request": {
                      "url": "https://api.github.com/repos/abpedroni/test-gh-get-events-app-argocd/pulls/38",
                      "html_url": "https://github.com/abpedroni/test-gh-get-events-app-argocd/pull/38",
                      "diff_url": "https://github.com/abpedroni/test-gh-get-events-app-argocd/pull/38.diff",
                      "patch_url": "https://github.com/abpedroni/test-gh-get-events-app-argocd/pull/38.patch",
                      "merged_at": "2024-01-03T18:00:30Z"
                  },
                  "reactions": {
                      "url": "https://api.github.com/repos/abpedroni/test-gh-get-events-app-argocd/issues/38/reactions",
                      "total_count": 0,
                      "+1": 1,
                      "-1": 1,
                      "laugh": 0,
                      "hooray": 0,
                      "confused": 0,
                      "heart": 0,
                      "rocket": 0,
                      "eyes": 0
                  },
                  "timeline_url": "https://api.github.com/repos/abpedroni/test-gh-get-events-app-argocd/issues/38/timeline",
                  "performed_via_github_app": null,
                  "state_reason": null
              },
              "installation": {
                  "id": 33395641,
                  "node_id": "MDIzOkludGVncmF0aW9uSW5zdGFsbGF0aW9uMzMzOTU2NDE="
              }
            }'